# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18EABKFgF27CPra-WyvtZAWmG1yQMFfLY
"""

import streamlit as st
import pandas as pd
import datetime as dt
from datetime import datetime
import matplotlib.pyplot as plt
import requests

def load_data():
    # Function to load data from tradingview API
    # The link to the data in CSV format is in the notes
    # Function parameters: none
    # Function returns: dataframe with stock data

    # Set the date range
    end_date = datetime.now()
    start_date = end_date - pd.DateOffset(years=5)

    # Construct the API link
    link = "https://www.tradingview.com/historical-data/id=IDX-BBCA&a=0&b=1&c=1998&d=0&e=1&f=2023&g=d&h=1440&i=120&j=0&k=00:00:00&l=00:00:00&m=0&n=0&o=0&p=0&q=0&r=0&s=0&t=IDX-BBCA&u=0&v=0&w=0&x=0&y=0&z=0&file_format=csv"

    # Get the data
    r = requests.get(link)

    # Check if the data is returned in csv format
    if r.headers['Content-Type'] == 'text/csv; charset=utf-8':
        # If the data is in csv format, convert it to a pandas dataframe
        data = r.content.decode('utf-8')
        df = pd.read_csv(pd.StringIO(data))
    else:
        # If the data is not in csv format, print an error message
        print("Error: The data is not in CSV format.")
        df = None

    return df

def visualize_data(df):
    # Function to visualize data
    # Function parameters: dataframe with stock data
    # Function returns: none

    # Display the dataframe
    st.write(df)

    # Create a line plot of the stock price
    plt.figure(figsize=(10,5))
    plt.plot(df['Date'], df['Close'], label='Close Price')
    plt.title('Stock Price over Time')
    plt.xlabel('Date')
    plt.ylabel('Close Price')
    plt.legend()
    st.pyplot(plt)

# Set the page title
st.title('Stock Price Dashboard')

# Load the data
data = load_data()

# Check if the data is loaded successfully
if data is not None:
    # Visualize the data
    visualize_data(data)
else:
    # If the data is not loaded successfully, print an error message
    st.write("Error: The data is not loaded.")

